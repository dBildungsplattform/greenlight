# Base stage with common dependencies
FROM alpine:3.17 AS base

ARG RAILS_ROOT=/usr/src/app
ENV RAILS_ROOT=${RAILS_ROOT}
WORKDIR $RAILS_ROOT

RUN apk add --no-cache \
    libpq \
    libxml2 \
    libxslt \
    ruby \
    ruby-irb \
    ruby-bigdecimal \
    ruby-bundler \
    ruby-json \
    tzdata \
    bash \
    shared-mime-info



# Builder stage for installing build dependencies
FROM base AS builder

RUN apk add --no-cache \
    build-base \
    curl-dev \
    git \
    libxml2-dev \
    libxslt-dev \
    pkgconf \
    postgresql-dev \
    ruby-dev \
    nodejs \
    yarn \
    yaml-dev \
    zlib-dev



COPY Gemfile* ./

RUN bundle lock --add-platform x86_64-linux-musl
RUN bundle config build.nokogiri --use-system-libraries \
    && bundle config set --local deployment 'true' --without 'development test' \
    && bundle install -j4 \
    && yarn install

COPY . ./

# Final stage
FROM base

# Ensure development dependencies are installed
RUN apk add --no-cache \
    build-base \
    curl-dev \
    libxml2-dev \
    libxslt-dev \
    pkgconf \
    postgresql-dev \
    ruby-dev \
    nodejs \
    yarn \
    yaml-dev \
    zlib-dev

COPY --from=builder $RAILS_ROOT $RAILS_ROOT
RUN chmod +x ./bin/start

# Set environment variables
ARG RAILS_ENV
ENV RAILS_ENV=${RAILS_ENV:-development}
ARG RAILS_LOG_TO_STDOUT
ENV RAILS_LOG_TO_STDOUT=${RAILS_LOG_TO_STDOUT:-true}
ARG VERSION_CODE
ENV VERSION_CODE=$VERSION_CODE

EXPOSE 3000
CMD ["bash", "-c", "./bin/start"]